* Main goal is to work with the Easy Driver and Big Easy Driver designed by Brian Schmalz.
* Secondary goal is to support Allegro stepper motor driver chips using a Step/Direction interface.
* This library is meant to be lightweight, well suited to applications where memory and clock cycles are limited.
* Care has been taken to avoid floating point numbers and expensive math operations where possible (with the exception of some of the acceleration math). Please keep it that way.
* Avoid feature creep.
* Does your change fix a bug? Then great!
* Does your change add a brand new feature at the cost of slightly more memory/clock cycles needed? Then think twice.
* New features are fine if they are self-contained and won't be compiled in unless used in a project.
	* Compare the size and memory usage of a sketch before and after you add the feature to the library.
	* If you don't use the feature in your sketch, the sketch should not grow larger...
* Do not pollute the global namespace.
* Do not fill this library up with defines/macros. There is almost always a better way (eg, inline functions and constants).
* Use uintx_t/intx_t types, as they improve compatibility across different devices.
* Any changes to timing or acceleration code should be carefully tested
	* Measure frequency of STEP pin to make sure the output is an accurate and stable square wave
	* Use an oscilloscope or logic analyzer if available
	* Or, time how long it takes (use micros()) for the motor to move a fixed distance then back-calculate RPM, accel, etc to make sure the timing matches the set values
	* Just listening to and watching the motor is also quite instructive...
